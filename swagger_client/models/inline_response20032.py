# coding: utf-8

"""
    API

    ## Welcome  This is a place to put general notes and extra information, for internal use.  To get started designing/documenting this API, select a version on the left. # Title No Description  # noqa: E501

    OpenAPI spec version: 3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class InlineResponse20032(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'backdrop_path': 'ImagePath',
        'created_by': 'list[object]',
        'episode_run_time': 'list[int]',
        'first_air_date': 'str',
        'genres': 'list[InlineResponse20018Results]',
        'homepage': 'str',
        'id': 'int',
        'in_production': 'bool',
        'languages': 'list[str]',
        'last_air_date': 'str',
        'name': 'str',
        'networks': 'list[InlineResponse20018Results]',
        'number_of_episodes': 'int',
        'number_of_seasons': 'int',
        'origin_country': 'list[str]',
        'original_language': 'str',
        'original_name': 'str',
        'overview': 'str',
        'popularity': 'int',
        'poster_path': 'ImagePath',
        'production_companies': 'list[object]',
        'seasons': 'list[InlineResponse20032Seasons]',
        'status': 'str',
        'type': 'str',
        'vote_average': 'float',
        'vote_count': 'int'
    }

    attribute_map = {
        'backdrop_path': 'backdrop_path',
        'created_by': 'created_by',
        'episode_run_time': 'episode_run_time',
        'first_air_date': 'first_air_date',
        'genres': 'genres',
        'homepage': 'homepage',
        'id': 'id',
        'in_production': 'in_production',
        'languages': 'languages',
        'last_air_date': 'last_air_date',
        'name': 'name',
        'networks': 'networks',
        'number_of_episodes': 'number_of_episodes',
        'number_of_seasons': 'number_of_seasons',
        'origin_country': 'origin_country',
        'original_language': 'original_language',
        'original_name': 'original_name',
        'overview': 'overview',
        'popularity': 'popularity',
        'poster_path': 'poster_path',
        'production_companies': 'production_companies',
        'seasons': 'seasons',
        'status': 'status',
        'type': 'type',
        'vote_average': 'vote_average',
        'vote_count': 'vote_count'
    }

    def __init__(self, backdrop_path=None, created_by=None, episode_run_time=None, first_air_date=None, genres=None, homepage=None, id=None, in_production=None, languages=None, last_air_date=None, name=None, networks=None, number_of_episodes=None, number_of_seasons=None, origin_country=None, original_language=None, original_name=None, overview=None, popularity=None, poster_path=None, production_companies=None, seasons=None, status=None, type=None, vote_average=None, vote_count=None):  # noqa: E501
        """InlineResponse20032 - a model defined in Swagger"""  # noqa: E501
        self._backdrop_path = None
        self._created_by = None
        self._episode_run_time = None
        self._first_air_date = None
        self._genres = None
        self._homepage = None
        self._id = None
        self._in_production = None
        self._languages = None
        self._last_air_date = None
        self._name = None
        self._networks = None
        self._number_of_episodes = None
        self._number_of_seasons = None
        self._origin_country = None
        self._original_language = None
        self._original_name = None
        self._overview = None
        self._popularity = None
        self._poster_path = None
        self._production_companies = None
        self._seasons = None
        self._status = None
        self._type = None
        self._vote_average = None
        self._vote_count = None
        self.discriminator = None
        if backdrop_path is not None:
            self.backdrop_path = backdrop_path
        if created_by is not None:
            self.created_by = created_by
        if episode_run_time is not None:
            self.episode_run_time = episode_run_time
        if first_air_date is not None:
            self.first_air_date = first_air_date
        if genres is not None:
            self.genres = genres
        if homepage is not None:
            self.homepage = homepage
        if id is not None:
            self.id = id
        if in_production is not None:
            self.in_production = in_production
        if languages is not None:
            self.languages = languages
        if last_air_date is not None:
            self.last_air_date = last_air_date
        if name is not None:
            self.name = name
        if networks is not None:
            self.networks = networks
        if number_of_episodes is not None:
            self.number_of_episodes = number_of_episodes
        if number_of_seasons is not None:
            self.number_of_seasons = number_of_seasons
        if origin_country is not None:
            self.origin_country = origin_country
        if original_language is not None:
            self.original_language = original_language
        if original_name is not None:
            self.original_name = original_name
        if overview is not None:
            self.overview = overview
        if popularity is not None:
            self.popularity = popularity
        if poster_path is not None:
            self.poster_path = poster_path
        if production_companies is not None:
            self.production_companies = production_companies
        if seasons is not None:
            self.seasons = seasons
        if status is not None:
            self.status = status
        if type is not None:
            self.type = type
        if vote_average is not None:
            self.vote_average = vote_average
        if vote_count is not None:
            self.vote_count = vote_count

    @property
    def backdrop_path(self):
        """Gets the backdrop_path of this InlineResponse20032.  # noqa: E501


        :return: The backdrop_path of this InlineResponse20032.  # noqa: E501
        :rtype: ImagePath
        """
        return self._backdrop_path

    @backdrop_path.setter
    def backdrop_path(self, backdrop_path):
        """Sets the backdrop_path of this InlineResponse20032.


        :param backdrop_path: The backdrop_path of this InlineResponse20032.  # noqa: E501
        :type: ImagePath
        """

        self._backdrop_path = backdrop_path

    @property
    def created_by(self):
        """Gets the created_by of this InlineResponse20032.  # noqa: E501


        :return: The created_by of this InlineResponse20032.  # noqa: E501
        :rtype: list[object]
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this InlineResponse20032.


        :param created_by: The created_by of this InlineResponse20032.  # noqa: E501
        :type: list[object]
        """

        self._created_by = created_by

    @property
    def episode_run_time(self):
        """Gets the episode_run_time of this InlineResponse20032.  # noqa: E501


        :return: The episode_run_time of this InlineResponse20032.  # noqa: E501
        :rtype: list[int]
        """
        return self._episode_run_time

    @episode_run_time.setter
    def episode_run_time(self, episode_run_time):
        """Sets the episode_run_time of this InlineResponse20032.


        :param episode_run_time: The episode_run_time of this InlineResponse20032.  # noqa: E501
        :type: list[int]
        """

        self._episode_run_time = episode_run_time

    @property
    def first_air_date(self):
        """Gets the first_air_date of this InlineResponse20032.  # noqa: E501


        :return: The first_air_date of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._first_air_date

    @first_air_date.setter
    def first_air_date(self, first_air_date):
        """Sets the first_air_date of this InlineResponse20032.


        :param first_air_date: The first_air_date of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._first_air_date = first_air_date

    @property
    def genres(self):
        """Gets the genres of this InlineResponse20032.  # noqa: E501


        :return: The genres of this InlineResponse20032.  # noqa: E501
        :rtype: list[InlineResponse20018Results]
        """
        return self._genres

    @genres.setter
    def genres(self, genres):
        """Sets the genres of this InlineResponse20032.


        :param genres: The genres of this InlineResponse20032.  # noqa: E501
        :type: list[InlineResponse20018Results]
        """

        self._genres = genres

    @property
    def homepage(self):
        """Gets the homepage of this InlineResponse20032.  # noqa: E501


        :return: The homepage of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._homepage

    @homepage.setter
    def homepage(self, homepage):
        """Sets the homepage of this InlineResponse20032.


        :param homepage: The homepage of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._homepage = homepage

    @property
    def id(self):
        """Gets the id of this InlineResponse20032.  # noqa: E501


        :return: The id of this InlineResponse20032.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this InlineResponse20032.


        :param id: The id of this InlineResponse20032.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def in_production(self):
        """Gets the in_production of this InlineResponse20032.  # noqa: E501


        :return: The in_production of this InlineResponse20032.  # noqa: E501
        :rtype: bool
        """
        return self._in_production

    @in_production.setter
    def in_production(self, in_production):
        """Sets the in_production of this InlineResponse20032.


        :param in_production: The in_production of this InlineResponse20032.  # noqa: E501
        :type: bool
        """

        self._in_production = in_production

    @property
    def languages(self):
        """Gets the languages of this InlineResponse20032.  # noqa: E501


        :return: The languages of this InlineResponse20032.  # noqa: E501
        :rtype: list[str]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this InlineResponse20032.


        :param languages: The languages of this InlineResponse20032.  # noqa: E501
        :type: list[str]
        """

        self._languages = languages

    @property
    def last_air_date(self):
        """Gets the last_air_date of this InlineResponse20032.  # noqa: E501


        :return: The last_air_date of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._last_air_date

    @last_air_date.setter
    def last_air_date(self, last_air_date):
        """Sets the last_air_date of this InlineResponse20032.


        :param last_air_date: The last_air_date of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._last_air_date = last_air_date

    @property
    def name(self):
        """Gets the name of this InlineResponse20032.  # noqa: E501


        :return: The name of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this InlineResponse20032.


        :param name: The name of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def networks(self):
        """Gets the networks of this InlineResponse20032.  # noqa: E501


        :return: The networks of this InlineResponse20032.  # noqa: E501
        :rtype: list[InlineResponse20018Results]
        """
        return self._networks

    @networks.setter
    def networks(self, networks):
        """Sets the networks of this InlineResponse20032.


        :param networks: The networks of this InlineResponse20032.  # noqa: E501
        :type: list[InlineResponse20018Results]
        """

        self._networks = networks

    @property
    def number_of_episodes(self):
        """Gets the number_of_episodes of this InlineResponse20032.  # noqa: E501


        :return: The number_of_episodes of this InlineResponse20032.  # noqa: E501
        :rtype: int
        """
        return self._number_of_episodes

    @number_of_episodes.setter
    def number_of_episodes(self, number_of_episodes):
        """Sets the number_of_episodes of this InlineResponse20032.


        :param number_of_episodes: The number_of_episodes of this InlineResponse20032.  # noqa: E501
        :type: int
        """

        self._number_of_episodes = number_of_episodes

    @property
    def number_of_seasons(self):
        """Gets the number_of_seasons of this InlineResponse20032.  # noqa: E501


        :return: The number_of_seasons of this InlineResponse20032.  # noqa: E501
        :rtype: int
        """
        return self._number_of_seasons

    @number_of_seasons.setter
    def number_of_seasons(self, number_of_seasons):
        """Sets the number_of_seasons of this InlineResponse20032.


        :param number_of_seasons: The number_of_seasons of this InlineResponse20032.  # noqa: E501
        :type: int
        """

        self._number_of_seasons = number_of_seasons

    @property
    def origin_country(self):
        """Gets the origin_country of this InlineResponse20032.  # noqa: E501


        :return: The origin_country of this InlineResponse20032.  # noqa: E501
        :rtype: list[str]
        """
        return self._origin_country

    @origin_country.setter
    def origin_country(self, origin_country):
        """Sets the origin_country of this InlineResponse20032.


        :param origin_country: The origin_country of this InlineResponse20032.  # noqa: E501
        :type: list[str]
        """

        self._origin_country = origin_country

    @property
    def original_language(self):
        """Gets the original_language of this InlineResponse20032.  # noqa: E501


        :return: The original_language of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._original_language

    @original_language.setter
    def original_language(self, original_language):
        """Sets the original_language of this InlineResponse20032.


        :param original_language: The original_language of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._original_language = original_language

    @property
    def original_name(self):
        """Gets the original_name of this InlineResponse20032.  # noqa: E501


        :return: The original_name of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._original_name

    @original_name.setter
    def original_name(self, original_name):
        """Sets the original_name of this InlineResponse20032.


        :param original_name: The original_name of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._original_name = original_name

    @property
    def overview(self):
        """Gets the overview of this InlineResponse20032.  # noqa: E501


        :return: The overview of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._overview

    @overview.setter
    def overview(self, overview):
        """Sets the overview of this InlineResponse20032.


        :param overview: The overview of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._overview = overview

    @property
    def popularity(self):
        """Gets the popularity of this InlineResponse20032.  # noqa: E501


        :return: The popularity of this InlineResponse20032.  # noqa: E501
        :rtype: int
        """
        return self._popularity

    @popularity.setter
    def popularity(self, popularity):
        """Sets the popularity of this InlineResponse20032.


        :param popularity: The popularity of this InlineResponse20032.  # noqa: E501
        :type: int
        """

        self._popularity = popularity

    @property
    def poster_path(self):
        """Gets the poster_path of this InlineResponse20032.  # noqa: E501


        :return: The poster_path of this InlineResponse20032.  # noqa: E501
        :rtype: ImagePath
        """
        return self._poster_path

    @poster_path.setter
    def poster_path(self, poster_path):
        """Sets the poster_path of this InlineResponse20032.


        :param poster_path: The poster_path of this InlineResponse20032.  # noqa: E501
        :type: ImagePath
        """

        self._poster_path = poster_path

    @property
    def production_companies(self):
        """Gets the production_companies of this InlineResponse20032.  # noqa: E501


        :return: The production_companies of this InlineResponse20032.  # noqa: E501
        :rtype: list[object]
        """
        return self._production_companies

    @production_companies.setter
    def production_companies(self, production_companies):
        """Sets the production_companies of this InlineResponse20032.


        :param production_companies: The production_companies of this InlineResponse20032.  # noqa: E501
        :type: list[object]
        """

        self._production_companies = production_companies

    @property
    def seasons(self):
        """Gets the seasons of this InlineResponse20032.  # noqa: E501


        :return: The seasons of this InlineResponse20032.  # noqa: E501
        :rtype: list[InlineResponse20032Seasons]
        """
        return self._seasons

    @seasons.setter
    def seasons(self, seasons):
        """Sets the seasons of this InlineResponse20032.


        :param seasons: The seasons of this InlineResponse20032.  # noqa: E501
        :type: list[InlineResponse20032Seasons]
        """

        self._seasons = seasons

    @property
    def status(self):
        """Gets the status of this InlineResponse20032.  # noqa: E501


        :return: The status of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this InlineResponse20032.


        :param status: The status of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this InlineResponse20032.  # noqa: E501


        :return: The type of this InlineResponse20032.  # noqa: E501
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this InlineResponse20032.


        :param type: The type of this InlineResponse20032.  # noqa: E501
        :type: str
        """

        self._type = type

    @property
    def vote_average(self):
        """Gets the vote_average of this InlineResponse20032.  # noqa: E501


        :return: The vote_average of this InlineResponse20032.  # noqa: E501
        :rtype: float
        """
        return self._vote_average

    @vote_average.setter
    def vote_average(self, vote_average):
        """Sets the vote_average of this InlineResponse20032.


        :param vote_average: The vote_average of this InlineResponse20032.  # noqa: E501
        :type: float
        """

        self._vote_average = vote_average

    @property
    def vote_count(self):
        """Gets the vote_count of this InlineResponse20032.  # noqa: E501


        :return: The vote_count of this InlineResponse20032.  # noqa: E501
        :rtype: int
        """
        return self._vote_count

    @vote_count.setter
    def vote_count(self, vote_count):
        """Sets the vote_count of this InlineResponse20032.


        :param vote_count: The vote_count of this InlineResponse20032.  # noqa: E501
        :type: int
        """

        self._vote_count = vote_count

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(InlineResponse20032, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, InlineResponse20032):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
